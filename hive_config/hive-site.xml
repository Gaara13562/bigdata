<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<configuration>
	<!-- 做过修改的部分配置，其余的配置不变 -->
	<!-- HDFS上存储hive数据库表的文件目录 -->
	<property>
		<name>hive.metastore.warehouse.dir</name>
		<value>/user/hive/warehouse</value>
		<description>location of default database for the warehouse
		</description>
	</property>
	
	<!-- 配置多用户，如果是单用户那么不用配置这个字段 -->
	<property>
		<name>hive.metastore.uris</name>
		<value>thrift://node1:9083</value>
		<description>Thrift URI for the remote metastore. Used by metastore client to connect to remote metastore.</description>
	</property>
	
	<property>
		<name>hive.exec.local.scratchdir</name>
		<value>/root/apache-hive-2.3.3/tmp</value>
		<description>Local scratch space for Hive jobs</description>
	</property>
	<property>
		<name>hive.downloaded.resources.dir</name>
		<value>/root/apache-hive-2.3.3/tmp</value>
		<description>Temporary local directory for added resources in the
			remote file system.
		</description>
	</property>
	<property>
		<name>hive.scratch.dir.permission</name>
		<value>777</value>
		<description>The permission for the user specific scratch directories
			that get created.
		</description>
	</property>

	<!-- 存储元数据Metadata，Mysql配置 -->
	<property>
		<name>javax.jdo.option.ConnectionURL</name>
		<value>jdbc:mysql://node1:3306/hive?createDatabaseIfNotExist=true&amp;useSSL=false
		</value>
	</property>
	<property>
		<name>javax.jdo.option.ConnectionDriverName</name>
		<value>com.mysql.jdbc.Driver</value>
		<description>Driver class name for a JDBC metastore</description>
	</property>
	<property>
		<name>javax.jdo.option.ConnectionUserName</name>
		<value>hive</value>
		<description>Username to use against metastore database</description>
	</property>
	<property>
		<name>javax.jdo.option.ConnectionPassword</name>
		<value>hive</value>
		<description>password to use against metastore database</description>
	</property>

	<property>
		<name>datanucleus.schema.autoCreateAll</name>
		<value>true</value>
	</property>
	<property>
		<name>hive.metastore.schema.verification</name>
		<value>false</value>
	</property>

	<!-- 在Hive中显示数据库名和表头 -->
	<property>
		<name>hive.cli.print.current.db</name>
		<value>true</value>
		<description>Whether to include the current database in the Hive
			prompt.</description>
	</property>
	<property>
		<name>hive.cli.print.header</name>
		<value>true</value>
		<description>Whether to print the names of the columns in query
			output.</description>
	</property>

	<!-- Beeline相关配置 -->
	<property>
		<name>hive.server2.transport.mode</name>
		<value>binary</value>
		<description>Expects one of [binary, http]. Transport mode of
			HiveServer2.
		</description>
	</property>

	<!-- hive所在的服务器IP地址/主机名 -->
	<property>
		<name>hive.server2.thrift.bind.host</name>
		<value>node1</value>
		<description>Bind host on which to run the HiveServer2 Thrift service.
		</description>
	</property>

	<property>
		<name>hive.server2.thrift.port</name>
		<value>10000</value>
		<description>Port number of HiveServer2 Thrift interface when
			hive.server2.transport.mode is 'binary'.
		</description>
	</property>

	<property>
		<name>hive.server2.thrift.min.worker.threads</name>
		<value>5</value>
		<description>Minimum number of Thrift worker threads</description>
	</property>

	<property>
		<name>hive.server2.thrift.max.worker.threads</name>
		<value>500</value>
		<description>Maximum number of Thrift worker threads</description>
	</property>
	<!-- 取消认证 -->
	<property>
		<name>hive.server2.enable.doAs</name>
		<value>false</value>
		<description>
			Setting this property to true will have HiveServer2
			execute Hive operations as the user making the calls to it.
		</description>
	</property>

	<!-- ZooKeeper+Hive配置 -->
	<property>
		<name>hive.server2.support.dynamic.service.discovery</name>
		<value>true</value>
	</property>

	<!-- 启用ZooKeeper，下面表示在ZK中创建相应的节点名称 -->
	<property>
		<name>hive.server2.zookeeper.namespace</name>
		<value>hiveserver2_zk</value>
		<description>The parent node in ZooKeeper used by HiveServer2 when
			supporting dynamic service discovery.
		</description>
	</property>

	<!-- 指定ZK集群 -->
	<property>
		<name>hive.zookeeper.quorum</name>
		<value>node1,node2,node3</value>
	</property>
	<property>
		<name>hive.zookeeper.client.port</name>
		<value>2181</value>
	</property>

</configuration>
